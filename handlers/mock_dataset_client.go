// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/ONSdigital/dp-frontend-dataset-controller/handlers (interfaces: DatasetClient)

package handlers

import (
	dataset "github.com/ONSdigital/go-ns/clients/dataset"
	gomock "github.com/golang/mock/gomock"
)

// MockDatasetClient is a mock of DatasetClient interface
type MockDatasetClient struct {
	ctrl     *gomock.Controller
	recorder *MockDatasetClientMockRecorder
}

// MockDatasetClientMockRecorder is the mock recorder for MockDatasetClient
type MockDatasetClientMockRecorder struct {
	mock *MockDatasetClient
}

// NewMockDatasetClient creates a new mock instance
func NewMockDatasetClient(ctrl *gomock.Controller) *MockDatasetClient {
	mock := &MockDatasetClient{ctrl: ctrl}
	mock.recorder = &MockDatasetClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockDatasetClient) EXPECT() *MockDatasetClientMockRecorder {
	return _m.recorder
}

// Get mocks base method
func (_m *MockDatasetClient) Get(_param0 string) (dataset.Model, error) {
	ret := _m.ctrl.Call(_m, "Get", _param0)
	ret0, _ := ret[0].(dataset.Model)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (_mr *MockDatasetClientMockRecorder) Get(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0)
}

// GetEditions mocks base method
func (_m *MockDatasetClient) GetEditions(_param0 string) ([]dataset.Edition, error) {
	ret := _m.ctrl.Call(_m, "GetEditions", _param0)
	ret0, _ := ret[0].([]dataset.Edition)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEditions indicates an expected call of GetEditions
func (_mr *MockDatasetClientMockRecorder) GetEditions(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetEditions", arg0)
}

// GetVersion mocks base method
func (_m *MockDatasetClient) GetVersion(_param0 string, _param1 string, _param2 string) (dataset.Version, error) {
	ret := _m.ctrl.Call(_m, "GetVersion", _param0, _param1, _param2)
	ret0, _ := ret[0].(dataset.Version)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVersion indicates an expected call of GetVersion
func (_mr *MockDatasetClientMockRecorder) GetVersion(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetVersion", arg0, arg1, arg2)
}

// GetVersions mocks base method
func (_m *MockDatasetClient) GetVersions(_param0 string, _param1 string) ([]dataset.Version, error) {
	ret := _m.ctrl.Call(_m, "GetVersions", _param0, _param1)
	ret0, _ := ret[0].([]dataset.Version)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVersions indicates an expected call of GetVersions
func (_mr *MockDatasetClientMockRecorder) GetVersions(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetVersions", arg0, arg1)
}

// Healthcheck mocks base method
func (_m *MockDatasetClient) Healthcheck() (string, error) {
	ret := _m.ctrl.Call(_m, "Healthcheck")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Healthcheck indicates an expected call of Healthcheck
func (_mr *MockDatasetClientMockRecorder) Healthcheck() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Healthcheck")
}
