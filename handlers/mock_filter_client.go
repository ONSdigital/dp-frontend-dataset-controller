// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/ONSdigital/dp-frontend-dataset-controller/handlers (interfaces: FilterClient)

package handlers

import (
	gomock "github.com/golang/mock/gomock"
)

// MockFilterClient is a mock of FilterClient interface
type MockFilterClient struct {
	ctrl     *gomock.Controller
	recorder *MockFilterClientMockRecorder
}

// MockFilterClientMockRecorder is the mock recorder for MockFilterClient
type MockFilterClientMockRecorder struct {
	mock *MockFilterClient
}

// NewMockFilterClient creates a new mock instance
func NewMockFilterClient(ctrl *gomock.Controller) *MockFilterClient {
	mock := &MockFilterClient{ctrl: ctrl}
	mock.recorder = &MockFilterClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockFilterClient) EXPECT() *MockFilterClientMockRecorder {
	return _m.recorder
}

// AddDimension mocks base method
func (_m *MockFilterClient) AddDimension(_param0 string, _param1 string) error {
	ret := _m.ctrl.Call(_m, "AddDimension", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddDimension indicates an expected call of AddDimension
func (_mr *MockFilterClientMockRecorder) AddDimension(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "AddDimension", arg0, arg1)
}

// CreateJob mocks base method
func (_m *MockFilterClient) CreateJob(_param0 string) (string, error) {
	ret := _m.ctrl.Call(_m, "CreateJob", _param0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateJob indicates an expected call of CreateJob
func (_mr *MockFilterClientMockRecorder) CreateJob(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateJob", arg0)
}

// Healthcheck mocks base method
func (_m *MockFilterClient) Healthcheck() (string, error) {
	ret := _m.ctrl.Call(_m, "Healthcheck")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Healthcheck indicates an expected call of Healthcheck
func (_mr *MockFilterClientMockRecorder) Healthcheck() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Healthcheck")
}
